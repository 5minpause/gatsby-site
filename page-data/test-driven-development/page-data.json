{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/test-driven-development","result":{"data":{"post":{"__typename":"MdxPost","slug":"/test-driven-development","title":"Test driven development","date":"25.07.2018","tags":null,"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Test driven development\",\n  \"categories\": \"newsletter\\\"\",\n  \"date\": \"2018-07-25 15:00:00 +0200\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Test-driven-development. There\\u2019s no other way to do this.  \", \"\\nAlways write tests first!\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Always have failing tests before writing the code!\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Write code in small iterations.  \"), mdx(\"p\", null, \"Write the next failing test once the first iteration passes the test.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Repeat until finished.  \"), mdx(\"p\", null, \"That\\u2019s how you do it.   \"), mdx(\"p\", null, \"Or not.  \"), mdx(\"p\", null, \"You can write your feature, your code. And write a test afterwards.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Like a regression test.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Sometimes that\\u2019s what you do, when you use snapshot testing for React components.  \"), mdx(\"p\", null, \"Either way it\\u2019s your decision as a professional to make what way you want to develop and test.\\nYou get paid to make the right decision, but it is your decision to make. Not somebody else\\u2019s.\\nPlease don't forget that. Don't run around and blindly spread the gospels of our software dev gods.\\nYou get paid for thinking and without thinking we could have a machine write the code for us.  \"), mdx(\"p\", null, \"Holger\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Test-driven-development. There’s no other way to do this.   \nAlways write tests first! Always have failing tests before writing the code…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/test-driven-development","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}