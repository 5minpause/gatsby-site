{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/quality","result":{"data":{"post":{"slug":"/quality","title":"Quality","date":"30.08.2018","tags":null,"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Quality\",\n  \"categories\": \"newsletter\",\n  \"date\": \"2018-08-30T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hi friend.\"), mdx(\"p\", null, \"If you buy a piece of furniture, like a chair, you can compare it with all the other chairs in the exhibition. You can sit on them and compare how they feel. You get a feel for the wood, whether it\\u2018s cheap or high quality.\"), mdx(\"p\", null, \"How do you do that with code? Once the software is released you are able to compare and evaluate. But before?\"), mdx(\"p\", null, \"Consider the case that you are looking for an OSS library for your project. You find 3 contenders (often there are more, I know!). How do you know which one is best? If they offer demos, you\\u2019ll probably compare those, right? I know I would. I did it just yesterday. But if two are more or less equally good in fulfilling your use case, what would you do? Do you compare the source code? Good idea, I\\u2019d say. Feasible if the libs are small. Impractical for bigger ones.\\nAlright, I believe what most of us do\\u2014perhaps even as a first step\\u2014is evaluating the library\\u2019s popularity! If more devs use library A then it will probably be better, right? Perhaps it\\u2019s written by someone you\\u2019ve heard of before? Even better! More credibility for this lib. But\\u2026 did you look at the actual code? Do you have any (hard) metric for its quality?\"), mdx(\"p\", null, \"There are tools you could use, like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://codeclimate.com\"\n  }, \"Code Climate\"), \" and others. But they might only tell you half the story.\"), mdx(\"p\", null, \"To get to the point: We do not have a reliable, universal way to judge code quality, and in essence our work. The only thing that comes close is peer review and your colleagues' judgment.\"), mdx(\"p\", null, \"What do you think? How do you measure the quality of (your) work?\"), mdx(\"p\", null, \"Yours,\\nHolger\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Hi friend. If you buy a piece of furniture, like a chair, you can compare it with all the other chairs in the exhibition. You can sit onâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/quality","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}